// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201225153254_init_contact")]
    partial class init_contact
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Accounting.AdditionalCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("currencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int>("nationalCurrencyCost")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("currencyId");

                    b.ToTable("AdditionalCosts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bamkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("callbackUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cardNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ibanNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("BankAccounts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressId")
                        .HasColumnType("int");

                    b.Property<string>("barCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expirationTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.HasIndex("userId");

                    b.ToTable("Carts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.CartAdditionalCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("additionalCostId")
                        .HasColumnType("int");

                    b.Property<int>("cartId")
                        .HasColumnType("int");

                    b.Property<int>("cost")
                        .HasColumnType("int")
                        .IsUnicode(true);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("additionalCostId");

                    b.HasIndex("cartId");

                    b.ToTable("CartAdditionalCosts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.CartProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("shopProductId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalPrice")
                        .HasColumnType("int");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cartId");

                    b.HasIndex("shopProductId");

                    b.ToTable("CartProducts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.ExchageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nationalCurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("nationalCurrencyId");

                    b.ToTable("ExchageRates","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressId")
                        .HasColumnType("int");

                    b.Property<string>("barCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expirationTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.HasIndex("userId");

                    b.ToTable("Invoices","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.InvoiceAdditionalCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("additionalCostId")
                        .HasColumnType("int");

                    b.Property<int>("cost")
                        .HasColumnType("int")
                        .IsUnicode(true);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<int>("invoiceId")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("additionalCostId");

                    b.HasIndex("invoiceId");

                    b.ToTable("InvoiceAdditionalCosts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.InvoiceProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<int>("invoiceId")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("shopProductId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalPrice")
                        .HasColumnType("int");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("invoiceId");

                    b.HasIndex("shopProductId");

                    b.ToTable("InvoiceProducts","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.NationalCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("persianSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NationalCurrencies","Accounting");
                });

            modelBuilder.Entity("Entities.Accounting.PaymentRecipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<int>("invoiceId")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("refId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalPayment")
                        .HasColumnType("int");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("bankId");

                    b.HasIndex("invoiceId");

                    b.ToTable("PaymentRecipts","Accounting");
                });

            modelBuilder.Entity("Entities.Base.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customClassStyleNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("menu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int>("parent")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus","Base");
                });

            modelBuilder.Entity("Entities.Base.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Options","Base");
                });

            modelBuilder.Entity("Entities.Base.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("UserComments","Base");
                });

            modelBuilder.Entity("Entities.Base.UserMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("UserMessages","Base");
                });

            modelBuilder.Entity("Entities.Content.ContactForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContactForms","CMS");
                });

            modelBuilder.Entity("Entities.Content.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contentImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int?>("contentParent")
                        .HasColumnType("int");

                    b.Property<string>("contentSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("defaultKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("defaultTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contents","CMS");
                });

            modelBuilder.Entity("Entities.Content.ContentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("backgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int>("categoryParent")
                        .HasColumnType("int");

                    b.Property<string>("categoryTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("defaultKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("defaultTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContentCategories","CMS");
                });

            modelBuilder.Entity("Entities.Content.ContentComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("authorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commentAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("commentParent")
                        .HasColumnType("int");

                    b.Property<string>("commentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("postId")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContentComments","CMS");
                });

            modelBuilder.Entity("Entities.Content.ContentOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attachedFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("optionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContentOptions","CMS");
                });

            modelBuilder.Entity("Entities.Content.FileContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<double>("size")
                        .HasColumnType("float");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FileContents","CMS");
                });

            modelBuilder.Entity("Entities.Shop.AcceptRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("acceptItem")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("itemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AcceptRecords","Shop");
                });

            modelBuilder.Entity("Entities.Shop.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories","Shop");
                });

            modelBuilder.Entity("Entities.Shop.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<string>("ipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("isMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("itemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("liked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Likes","Shop");
                });

            modelBuilder.Entity("Entities.Shop.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barcode")
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pictureIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pictureLarge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pictureSmall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products","Shop");
                });

            modelBuilder.Entity("Entities.Shop.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("buyRate")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("featureRate")
                        .HasColumnType("int");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("productRate")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("technologyRate")
                        .HasColumnType("int");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductComments","Shop");
                });

            modelBuilder.Entity("Entities.Shop.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valueType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductFeatures","Shop");
                });

            modelBuilder.Entity("Entities.Shop.ProductPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("altText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductPhotos","Shop");
                });

            modelBuilder.Entity("Entities.Shop.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<double?>("lat")
                        .HasColumnType("float");

                    b.Property<double?>("lng")
                        .HasColumnType("float");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shops","Shop");
                });

            modelBuilder.Entity("Entities.Shop.ShopProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("buyPrice")
                        .HasColumnType("int");

                    b.Property<bool?>("call_us")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("currencyBuyPrice")
                        .HasColumnType("int");

                    b.Property<int?>("currencyPrice")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<int>("inventory")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nationalCurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("off_expire")
                        .HasColumnType("datetime2");

                    b.Property<double?>("off_price")
                        .HasColumnType("float");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.Property<bool>("specialOffer")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("stock")
                        .HasColumnType("bit");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<string>("warrenty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("nationalCurrencyId");

                    b.HasIndex("productId");

                    b.HasIndex("shopId");

                    b.ToTable("ShopProducts","Shop");
                });

            modelBuilder.Entity("Entities.Shop.ShopProductActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("shopProductId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("shopProductId");

                    b.ToTable("ShopProductActivities","Shop");
                });

            modelBuilder.Entity("Entities.Shop.ShopProductColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("shopProductId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("shopProductId");

                    b.ToTable("ShopProductColors","Shop");
                });

            modelBuilder.Entity("Entities.Shop.Warrenty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Warrenties","Shop");
                });

            modelBuilder.Entity("Entities.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fatherId")
                        .HasColumnType("int");

                    b.Property<string>("fatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("gender")
                        .HasColumnType("int");

                    b.Property<string>("homePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identityCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<string>("insuranceCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("irBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("lastLoginDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("motherId")
                        .HasColumnType("int");

                    b.Property<string>("nationalCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("officeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<int>("representerId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tall")
                        .HasColumnType("int");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int?>("weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Entities.User.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("addressType")
                        .HasColumnType("int");

                    b.Property<string>("buildingNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("creationDay")
                        .HasColumnType("int");

                    b.Property<string>("creationPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedDay")
                        .HasColumnType("int");

                    b.Property<string>("deletedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("floor")
                        .HasColumnType("int");

                    b.Property<int?>("important")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<double>("locationLat")
                        .HasColumnType("float");

                    b.Property<double>("locationLng")
                        .HasColumnType("float");

                    b.Property<DateTime?>("modifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modifiedDay")
                        .HasColumnType("int");

                    b.Property<string>("modifiedPersianDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("priority")
                        .HasColumnType("int");

                    b.Property<string>("room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("systemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("UserAddresses","User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Accounting.AdditionalCost", b =>
                {
                    b.HasOne("Entities.Accounting.NationalCurrency", "currency")
                        .WithMany("additionalCosts")
                        .HasForeignKey("currencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.BankAccount", b =>
                {
                    b.HasOne("Entities.User.User", "user")
                        .WithMany("banks")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.Cart", b =>
                {
                    b.HasOne("Entities.User.UserAddress", "address")
                        .WithMany("carts")
                        .HasForeignKey("addressId");

                    b.HasOne("Entities.User.User", "user")
                        .WithMany("carts")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.CartAdditionalCost", b =>
                {
                    b.HasOne("Entities.Accounting.AdditionalCost", "additionalCost")
                        .WithMany("cartAdditionalCosts")
                        .HasForeignKey("additionalCostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Accounting.Cart", "cart")
                        .WithMany("additionalCosts")
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.CartProduct", b =>
                {
                    b.HasOne("Entities.Accounting.Cart", "cart")
                        .WithMany("cartProducts")
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Shop.ShopProduct", "shopProduct")
                        .WithMany("cartProducts")
                        .HasForeignKey("shopProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.ExchageRate", b =>
                {
                    b.HasOne("Entities.Accounting.NationalCurrency", "nationalCurrency")
                        .WithMany("rates")
                        .HasForeignKey("nationalCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.Invoice", b =>
                {
                    b.HasOne("Entities.User.UserAddress", "address")
                        .WithMany("invoices")
                        .HasForeignKey("addressId");

                    b.HasOne("Entities.User.User", "user")
                        .WithMany("invoices")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.InvoiceAdditionalCost", b =>
                {
                    b.HasOne("Entities.Accounting.AdditionalCost", "additionalCost")
                        .WithMany("additionalCosts")
                        .HasForeignKey("additionalCostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Accounting.Invoice", "invoice")
                        .WithMany("additionalCosts")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.InvoiceProduct", b =>
                {
                    b.HasOne("Entities.Accounting.Invoice", "invoice")
                        .WithMany("invoiceProducts")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Shop.ShopProduct", "shopProduct")
                        .WithMany("invoiceProducts")
                        .HasForeignKey("shopProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Accounting.PaymentRecipt", b =>
                {
                    b.HasOne("Entities.Accounting.Cart", null)
                        .WithMany("recipts")
                        .HasForeignKey("CartId");

                    b.HasOne("Entities.Accounting.BankAccount", "bank")
                        .WithMany("recipts")
                        .HasForeignKey("bankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Accounting.Invoice", "invoice")
                        .WithMany("recipts")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Base.UserComment", b =>
                {
                    b.HasOne("Entities.User.User", "user")
                        .WithMany("comments")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Base.UserMessage", b =>
                {
                    b.HasOne("Entities.User.User", "user")
                        .WithMany("messages")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Shop.ProductComment", b =>
                {
                    b.HasOne("Entities.Shop.Product", "product")
                        .WithMany("comments")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Shop.ProductFeature", b =>
                {
                    b.HasOne("Entities.Shop.Product", "product")
                        .WithMany("features")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Shop.ProductPhoto", b =>
                {
                    b.HasOne("Entities.Shop.Product", "product")
                        .WithMany("photos")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Shop.ShopProduct", b =>
                {
                    b.HasOne("Entities.Accounting.NationalCurrency", "nationalCurrency")
                        .WithMany("shopProducts")
                        .HasForeignKey("nationalCurrencyId");

                    b.HasOne("Entities.Shop.Product", "product")
                        .WithMany("shopProducts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Shop.Shop", "shop")
                        .WithMany("shopProducts")
                        .HasForeignKey("shopId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Shop.ShopProductActivity", b =>
                {
                    b.HasOne("Entities.Shop.ShopProduct", "shopProduct")
                        .WithMany("Activities")
                        .HasForeignKey("shopProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Shop.ShopProductColor", b =>
                {
                    b.HasOne("Entities.Shop.ShopProduct", "shopProduct")
                        .WithMany("Colors")
                        .HasForeignKey("shopProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.User.UserAddress", b =>
                {
                    b.HasOne("Entities.User.User", "user")
                        .WithMany("addresses")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Entities.User.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Entities.User.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
